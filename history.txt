#V2
test
get value
(begin (define r 10) (* pi (* r r)))
(begin (= 1 1)))
(begin (>= 2 1)))
(begin (>= 1 1)))
(begin (> 1 1)))
(begin (< 1 1)))
(begin (> 1 1)))
(begin (> 1 2)))
(begin (>= 1 1)))
(begin (< 1 1)))
(begin (<= 1 1)))
(begin (<= 1 2)))
(begin (< 1 2)))
(begin (< 1 3)))
(begin (< 3 1)))
(begin (< 1 1)))
(begin (< 2 1)))
(begin (< 1 2)))
(begin (> 1 2)))
(begin (> 2 1)))
(begin (= 2 1)))
(begin (= 1 1)))
(begin (<= 1 1)))
(begin (>= 1 1)))
(begin (>= 2 1)))
(begin (<= 1 2)))
(begin (< 1 2)))
(begin (> 2 1)))
(begin (< 1 2)))
(begin (< 2 1)))
(begin (> 1 2)))
(define bob (obj (bob)))
(define bob (obj bob))
(define ?r (var (object bob)))
(define ?r (var (int 10)))
(define ?r (var (10)))
(define ?r (var 10))
(define ?r (var int 10))
(?r)
(begin ?r)
(begin (define ?r (var int 10))
(begin (define ?r (var int 10)))
(get pi)
(get ?r)
(define bob (obj bob))
(define ?robot (var object bob))
(get ?robot)
(define fuel (var int 10))
(get fuel)
(+ fuel 10)
(define bob (obj bob)))
(define ?fuel (var int 10))
(get fuel)
(get ?fuel)
(+ fuel 10)
(+ ?fuel 10)
(define ?r (var object bob))
(get bob)
(define bob (obj bob))
(get bob)
(define alice (obj object alice))
(get alice
(get alice)
(define loc (sf object object))
(get loc)
(if (> (* 11 11) 120) (* 7 6) oops)
(if true (* 7 6) oops)
(if false (* 7 6) oops)
